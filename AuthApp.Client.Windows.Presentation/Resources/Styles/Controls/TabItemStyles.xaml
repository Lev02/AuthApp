<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:AuthApp.Client.Windows.Presentation.Resources.Controls"
    xmlns:materialIconsWPF="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF">
    <Style TargetType="{x:Type customControls:IconTabItem}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border
                            x:Name="borderMain"
                            Padding="5"
                            CornerRadius="{StaticResource NormalCornerRadius}">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>

                            <Border.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5" />
                            </Border.RenderTransformOrigin>

                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <materialIconsWPF:MaterialIcon
                                    Width="{StaticResource Normal_FontSize}"
                                    Height="{StaticResource Normal_FontSize}"
                                    Foreground="{DynamicResource PrimaryTextBrush}"
                                    Kind="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />

                                <TextBlock
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    FontFamily="{DynamicResource AnonymusPro}"
                                    FontSize="{StaticResource Normal_FontSize}"
                                    Foreground="{DynamicResource PrimaryTextBrush}"
                                    Text="{Binding Text, FallbackValue='Some button text', RelativeSource={RelativeSource TemplatedParent}}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Margin" Value="{StaticResource Left_Normal_Margin}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                                    <Setter Property="Margin" Value="0" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>


                        </Border>

                        <Border
                            x:Name="borderHoverOverlay2"
                            Background="{DynamicResource NormalOverlayBrush}"
                            CornerRadius="{StaticResource SmallCornerRadius}"
                            IsHitTestVisible="False">
                            <Border.RenderTransform>
                                <ScaleTransform CenterX="0" ScaleX="0" ScaleY="1" />
                            </Border.RenderTransform>

                            <Border.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5" />
                            </Border.RenderTransformOrigin>
                        </Border>
                    </Grid>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="borderMain" Property="Border.Background" Value="{DynamicResource PrimaryButtonBrush}" />
                            <Setter TargetName="borderMain" Property="Border.Cursor" Value="Arrow" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="borderMain" Property="Border.Background" Value="{DynamicResource LightOverlayBrush}" />
                            <Setter TargetName="borderMain" Property="Border.Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Enter hover overlay animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="borderHoverOverlay2"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.15" />

                                        <!--  Enter scale inner content animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="borderMain"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.05"
                                            Duration="0:0:0.15" />

                                        <DoubleAnimation
                                            Storyboard.TargetName="borderMain"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.05"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>


                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Exit hover overlay animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="borderHoverOverlay2"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="0"
                                            Duration="0:0:0.15" />

                                        <!--  Exit scale inner content animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="borderMain"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.15" />

                                        <DoubleAnimation
                                            Storyboard.TargetName="borderMain"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>